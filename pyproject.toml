[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["magellan"]

[project]
name = "MAGELLAN"
version = "1.0.0"
dependencies = [
    "matplotlib",
    "numpy<=1.26.4",
    "pandas",
    "torch",
    "torch_geometric",
    "networkx",
    "omnipath",
    "pyarrow",
    "openpyxl",
    "scipy",
    "seaborn",
    "alive-progress",
    "pytest-md-report",
    "pytest-cov",
    "scikit-learn>=1.6.0",
    "ipykernel>=6.29.5",
    "pip>=24.3.1",
    "pydot>=3.0.4",
    "z3>=0.2.0",
    "hypothesis>=6.124.1",
    "toml>=0.10.2",
    "cvxpy>=1.6.0",
    "kaleido==0.2.1",
    "plotly>=6.0.0",
]
authors = [
    {name="Matthew A. Clarke", email="matthewaclarke1991@gmail.com"},
    {name="Yuxin Sun", email="yuxin.x.sun@gmail.com"},
    {name="Charlie George Barker", email="charbarker96@gmail.com"},
]
description = "Package to support building and training BioModelAnalyzer models from pathway databases."
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
]

[project.optional-dependencies]
visualisation = ["pygraphviz"]
z3 = ["z3"]
latex = ["pydot", "graphviz"]
testing = ["pytest", "pytest-md", "pytest-md-report"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
